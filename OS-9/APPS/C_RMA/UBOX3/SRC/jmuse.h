/* JMUSE.H  -W1A-    begun 88/07/13 MJ Knudsen   Structures and other definitions for VDG-640 UltiMuse   Converting to Columns X's 88/11/8*/#define NEVENTS 32767#define Reg     register#define TRUE    1#define FALSE   0#define T       1#define F       0/* Screen display constants */#define NLINES      16        /* max # lines of records on screen */#define NCOLS       3         /* how many columns of record names */#define NRECORDS    (NCOLS * NLINES)#define DLCOLS      (2+1+1)   /* Cols of "wasted" delimiters incl no. */#define RECSHOWL    (78/NCOLS - DLCOLS)#define BUFFSIZE    81   /* Use for ALL gets() buffers */#define SFILENAME   33   /* max # chars in file name */#define RECNAMEL    33#define NCHORDS 3   /* One less than max # notes in chord */#define MCHORDS 3#define NSTAVES 7   /* max # of staffs you may use */#define MSTAVES 7   /* mask for above */#define MCLEFS  3   /* no NCLEFS; computed from array in staves.c */#define NPARTS  16  /* max # of parts (voices) */#define MPARTS  15  /* mask for above */#define NLEVELS 8   /* No. of distinct volume levels */#define NLVLS   NLEVELS#define MLEVELS 7#define NINSTRS 16  /* No. of instr patch defns */#define INAMEL  10  /* Length of an Instr name, incl \0 */#define   LCM       3    /* least common multiple */#define   NULL      0#define   FORE      1    /* By definition, Foreground is 1 */#define   BACK      0    /* so Background is 0. */#define   REST      32   /* Slot code for a rest *//* Articulations*/#define NARTICS     5    /* How many are there? */#define MARTICS     7    /* Mask for above */#define TIED        0#define LEGATO      1#define NORMAL      2#define MARCATO     3   /* old "Portamento" */#define STACCATO    4/* Above field aliases, to avoid Union shop */#define PARAM1  artic#define INCTYPE slot    /* also BARTYPE now */#define BARNUM  dur#define REPENDN pitmod  /* dual duty, Nx and Nth_End */#define TSNUMER pitmod#define TSDENOM PARAM1#define KSN     pitmod  /* - flasts, + sharps */#define LCHAR1  dur     /* label characters */#define LCHAR2  pitmod#define PARTNO  pitmod   /* for Instr & Volume */#define INSTRNO PARAM1#define TEMPONO dur#define LEVELNO PARAM1    /* volume levels *//* (1) show.INCTYPE tags for Inclusions (all Part 0):*  These MUST coordinate with global.c's incstrs[] !* All must not split any note/rests, except Patch Change*  and Dynamic or Tempo changes.*/    /* BarLine types, SINGLE <= n <= FINE  */#define SINGLEBAR   0   /* Plain old measure */#define ENDREPEAT   1   /* :|    */#define DUBARLINE   2   /* ||    terminates Nth-endings */#define DOUBLEBAR   2#define BEGREPEAT   3   /* |:    */#define DUBREPEAT   4   /* :||:  may go away, become VAMP or Nx */#define NTHENDING   5   /* ||1-- */#define FINE        6   /* Fine. MUST BE LAST BARTYPE. */    /* Non-BarLine inclusions, FINE < n < LMARK */    /* Numeric ordering important ==> L->R display order */#define LABEL       7   /* draw+ */#define SIGN        8   /* draw */#define CODA        9   /* draw */#define TIMESIG    10#define KEYSIG     11#define CALL       12   /* draw */    /* Markers must be kept in 3 consecutive integers: */#define LMARK      13#define RMARK      14#define TMARK      15#define DELETEX    16   /* not really a Marker */    /* These really could precede Markers */#define DACAPO     17   /* DC al FIne or Coda */#define DCSENZAREP 18#define DALSEGNO   19   /* DS ($) al Fine or Coda */#define DSSENZAREP 20#define SPACE      21   /* horizontal white blank */     /* New (7/87) items */#define MCHOP       22#define INSTR       23#define LEVEL       24#define NUTEMPO     25#define GENVOL      26#define CLOCKON     27#define CRESC       28#define ACCEL       29#define PEDALON     30#define OCTAVE      31#define IMARK       63/* End of INCTYPES *//* HILO enums for where a part goes on a staff */#define SOLO   0#define UPPER  1#define LOWER  2#define NOFLAG 4    /* show stems but not flags, for "chords" */#define NOREST 8    /* don't show Rests, just Notes (future) */#define PERC  16    /* Percussion part, don't transpose *//****** TYPES ******/#define void   inttypedef unsigned Etime;typedef unsigned Time;   /* Long in Umuse3 */typedef short  Deltime;typedef char   bool;typedef int    Index;/* Ints that could be bytes, but for SEX-crazed 'C' */typedef int    sexy;      /* -128 to +127 */typedef int    tiny;      /* -16 to +15 */  /* When reading "ubyte" below, must & with 255 */typedef char byte;   /* small Integer  -128 ~ +127 */typedef char ubyte;  /* small Unsigned 0 ~ 255; Graphics pixels *//* For JukeBox only */typedef struct {     char recname[RECNAMEL];     int  order;     bool played;} Record;typedef struct {  byte    dur,      /* Coded 0~7 for Breve thru 64th */    durmod,   /* Coded 0~3 for Null, ., .., Triplet */    slot,     /* Slot 0 is 1st line of whatever staff */    pitmod,   /* 0~7 = Null, ", #, ##, Natch, ", bb, b */    artic;    /* 0~4 = tie, legato, normal, marcato, stuccato */}    NOTE;      /* 5 bytes */typedef struct {     ubyte  part;        /* Voice no.: 0 (specials), 1~16 */     Etime  startime;    /* Start time of note w/in piece */     NOTE   show;        /* The note|rest! */} EVENT;                 /* 8 bytes *//* Structures for staves, parts, clefs. etc. */typedef struct {    short staffY;   /* height of bottom line */    tiny  clef_no;  /* which clef */    tiny  botnote;  /* # of WHITE note on bottom line */    tiny  xsharps;  /* # of extra sharps beyond "concert" key */    tiny  xsemis;   /* # extra semitones to transpose up */} STAFF;typedef struct {/*  char  *clefname; *//*  ubyte *climg;        /* clef draw image */    tiny  bnote;         /* # of WHITE note on bottom line */} CLEF;typedef struct {    tiny  pstaff;   /* which staff it's on */    tiny  philo;    /* stem info */} PART;/* Misc. abbreviations */#define SEVENT sizeof(EVENT)#define SNOTE  sizeof(NOTE)/* eof Jmuse.h */