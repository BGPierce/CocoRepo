* file ~JUKE/serial.a    Sped up 92/5/5, from 10 bits to 9. psect serial_a,0,0,0,0,0 nam serial_a* serial(), strup(), strdn().* * *#define MASK 02* *extern direct byte *midics;* *extern direct bool midipak, midiser;* *#define TBMT 2* ********* midiout(x)  Parallel and Serial MIDI Output* *  char x; ttl midioutmidiout: pshs u* *     if(midipak) { ldb <midipak  Faster than TST! beq tryser    Skip UART* *          while( !( *midics & TBMT)) ; ldx <midics   Holds UART's CSR addrmidiwait ldb ,x andb #2 beq midiwait* *          *(midics + 1) = x; ldb 5,s       The Data stb 1,x       UART's data reg = &CSR + 1tryser ldb <midiser bne serial    Do serial I/O? puls u,pc     No, returnserial ldu #$ff20    Coco's serial bit-banger ldx #9        X is Counter ldb 5,s       acc = out & 255     /* never mind stop bit */ clra aslb          out = (acc <<= 2);       /* incl. START bit ==0 */ rola aslb rola std 4,s       Save in 'out' temp word orcc #$50     Hold all callsloop andb #2  acc &= MASK; orb #$FD acc |= ~MASK;  avoid noisy TV DAC stb 0,u*** Kill time to get 57.28 cycles per bit (32 usec) ldb #04    use #04 for 6809; more for 6309 Nitro nopkill decb     2 cycles bne kill 3 cycles* *          out = acc = (out >> 1); ldd 4,s lsra rorb std 4,s* leax -1,x     Count bits bne loop** Now send STOP bit (lock output to MARK==1) ldb #$FF nop      equalize time stb ,u* andcc #$AF    OS9 users appreciate this puls u,pc* end midiout()* */* STRASS.A  Up & Down version of _strass(dest, src, nbytes) */* ** */* Move array UP, so work from top down */* *strup(dst, src, nby)* *  char *dst, *src;* *  int nby;* *{ ttl strupstrup: pshs u* *     U == *sp, X == *dp* ** *     dp = dst + nby; ldd 4,s addd 8,s tfr d,x* *     sp = src + nby; ldd 6,s addd 8,s tfr d,u* *     for( ; sp > src; ) bra _4* *          *(--dp) = *(--sp);_2 ldb ,-u stb ,-x_4 cmpu 6,s bhi _2_3 puls u,pc* A tad faster than strup.* */* Move array DOWN, so work from bottom up*/* *strdn(dst, src, nby)* e*{ ttl strdnstrdn: pshs u* *     U==sp, X==dp* *     char *quit;  ==0,S* ** *     X = dst; leas -2,s ldx 6,s* *     U = src; ldu 8,s* *     quit = src + nby; ldd 8,s addd 10,s std 0,s* *     for( ; sp < quit; ) bra _8* *          *dp++ = *sp++;_6 ldb ,u+ stb ,x+_8 cmpu ,s       'quit' blo _6_7 leas 2,s puls u,pc****************** endsect* eof ~Juke/serial.a