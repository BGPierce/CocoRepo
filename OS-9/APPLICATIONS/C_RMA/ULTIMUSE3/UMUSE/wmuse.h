/* ~VM640/WMUSE.H  -VM1A-    begun 88/07/13 MJ Knudsen   Virt-Mem VMuse3 with 16-bit BarNums 89/9/21   Structures and other definitions for VDG-640 UltiMuse   Converting to Columns X's 88/11/8*/#define NEVENTS     32767#define LEVEL2      1#define NEWCLUZES   1/* Compile options, some turned off to save space */#define JOYOPTION  1   /* enable Coco interface *//* #define NBAROPTION   /* choose #bars in new file */#define US      unsigned#define Reg     register#define TRUE    1#define FALSE   0/* PNEVENTS should be 1020 (KDKA, Pgh!). */#define OVERHEAD    32        /* no. bytes offset of link */#define PAGESIZE    (8192-OVERHEAD)#define PNEVENTS    (PAGESIZE/SEVENT)  /* No. events per page */#define BUFFSIZE    81   /* Use for ALL gets() buffers */#define SFILENAME   33   /* max # chars in file name */#define NCHORDS 3   /* One less than max # notes in chord */#define MCHORDS 3#define NSTAVES 7   /* max # of staffs you may use */#define MSTAVES 7   /* mask for above */#define MCLEFS  7#define NCLEFS  7  /* was 5 till Feb 92 */#define NPARTS  16  /* max # of parts (voices) */#define MPARTS  15  /* mask for above */#define NLEVELS 8   /* No. of distinct volume levels */#define NLVLS   NLEVELS#define MLEVELS 7#define NINSTRS 64  /* (was 16) No. of instr patch defns */#define MINSTRS 63  /* and mask */#define INAMEL  16  /* (was 10) Length of an Instr name, incl \0 */#define XINSTRS 255 /* most instrs we'll ever take */#define XINAMEL 63  /* longest name we'd believe */#define GXYSIZE 413 /* == (2/3 * 640) size of Graphic X,Y memory */#define   LCM       3    /* least common multiple */#define   NULL      0#define   FORE      1    /* By definition, Foreground is 1 */#define   BACK      0    /* so Background is 0. */#define   REST      32   /* Slot code for a rest *//* Articulations, numbered from longest to shortest */#define NARTICS     5    /* How many are there? */#define MARTICS     7    /* Mask for above */#define TIED        0#define LEGATO      1#define NORMAL      2#define MARCATO     3   /* old "Portamento" */#define STACCATO    4/* #define PIZZICATO   5 *//* INCLUSIONS or Pseudo-Events (Part = 0): * List of alternate [mis-] uses of event.show fields * (see separate doc file "object.fields") * Field aliases, to avoid Union shop:*/#define INCTYPE slot    /* also BARTYPE now *//* Bar Nos are kept in Motorola order internally,*    but little-endian on Disk for backwards compat'ly 89/09/21 */#define BARNOLO dur      /* Unforch, these are backwards of Motorola */#define BARNOHI durmod#define BARNO   dur     /* Cast to short to represent internal value */   /* see macros EvBarNo(evp) and ShoBarNo(showp) below */#define PARAM1  artic#define REPENDN pitmod  /* dual duty, Nx and Nth_End */#define TSNUMER pitmod#define TSDENOM PARAM1#define KSN     pitmod  /* - flats, + sharps */#define LCHAR1  dur     /* label characters */#define LCHAR2  pitmod#define PARTNO  pitmod   /* for Instr, Volume, MIDI chan hop, Events */#define INSTRNO PARAM1#define TEMPONO dur#define LEVELNO PARAM1   /* volume levels */#define TEVTNO PARAM1    /* Event Table index (future) */#define IEVTBYT0    dur       /* Opcode (Status) byte */#define IEVTBYT1    durmod    /* 1st data byte */#define IEVTBYT2    artic#define IEVTBYT3    pitmod#define TEVTARG1    dur       /* Note: ORG1, not 0 */#define TEVTARG2    durmod#define TEVTARG3    pitmod    /* also TPEVT.PARTNO so be careful *//* (1) show.INCTYPE tags for Inclusions (all Part 0):*  These MUST coordinate with bglob.c's incstrs[] !* All must not split any note/rests, except Patch Change*  and Dynamic or Tempo changes.*/    /* BarLine types, SINGLE <= n <= FINE  */#define SINGLEBAR   0   /* Plain old measure */#define ENDREPEAT   1   /* :|    */#define DUBARLINE   2   /* ||    terminates Nth-endings */#define DOUBLEBAR   2#define BEGREPEAT   3   /* |:    */#define DUBREPEAT   4   /* :||:  may go away, become VAMP or Nx */#define NTHENDING   5   /* ||1-- */#define FINE        6   /* Fine. MUST BE LAST BARTYPE. */    /* Non-BarLine inclusions, FINE < n < LMARK */    /* Numeric ordering important ==> L->R display order */#define LABEL       7   /* draw+ */#define SIGN        8   /* draw */#define CODA        9   /* draw */#define TIMESIG    10#define KEYSIG     11#define CALL       12   /* draw */    /* Markers must be kept in 3 consecutive integers: */#define LMARK       13#define RMARK       14#define TMARK       15#define DELETEX     16   /* not really a Marker */    /* These really could precede Markers */#define DACAPO      17   /* DC al FIne or Coda */#define DCSENZAREP  18#define DALSEGNO    19   /* DS ($) al Fine or Coda */#define DSSENZAREP  20#define SPACE       21   /* horizontal white blank */     /* New (7/87) items */#define MCHOP       22   /* Midi Channel Hop */#define INSTR       23#define LEVEL       24#define NUTEMPO     25#define GENVOL      26#define CLOCKON     27   /* incl. OFF */#define CRESC       28#define ACCEL       29     /* New Events (9/92, 4/93) */#define IPEVT  30   /* Immediate Partwise Event */#define ISEVT  31   /* Immed System (Fx) Evt */#define TPEVT  32   /* Table Partwise Evt */#define TSEVT  33   /* Table System (Fx) Evt */  /* Future */#define ACCENT      34#define PEDALON     35#define OCTAVE      36   /* +8va, -8va, Loco */#define IMARK       63   /* Not really an Inclusion, free to move *//* End of INCTYPES *//* HILO enums for where a part goes on a staff */#define SOLO   0#define UPPER  1#define LOWER  2#define NOFLAG 4    /* show stems but not flags, for "chords" */#define NOREST 8    /* don't show Rests, just Notes (future) */#define PERC  16    /* Percussion part, don't transpose */     /* there are 2 left *//****** TYPES ******/#define void   int/* 89/9/21  Absolute start_times "Time" must be Long,*             but local differences "Deltime" can be Short and Signed.*           Low word stored in Events "Etime" is Unsigned 16 bits.*/#define BADIX  (-1)           /* std. invalid Index code */typedef US          Etime;    /* actually stored in an Event */typedef long        Time;     /* for args only; really unsigned long */typedef short       Deltime;  /* yes, still signed & short */typedef char   bool;     /* tests faster (no SEX) */typedef short  Index;    /* could go to Unsigned for 65,536 notes (!) *//* Ints that could be bytes, but for SEX-crazed 'C' */typedef int    sexy;      /* -128 to +127 */typedef int    tiny;      /* -16 to +15 *//* Graphic X-coordinates */typedef int    Pixel;     /* 0 - 639 */typedef sexy   Col;       /* 0 - 79 */  /* When reading "ubyte" below, must & with 255 */typedef char byte;   /* small Integer  -128 ~ +127 */typedef char ubyte;  /* small Unsigned 0 ~ 255; Graphics pixels *//* 1/26/87 Combined name/octave into Slot */typedef struct note {  byte    dur,      /* Coded 0~7 for Breve thru 64th */    durmod,   /* Coded 0~3 for Null, ., .., Triplet *//* This Slot should become from Center line, not Bottom */    slot,     /* Slot 0 is 1st line of whatever staff */    pitmod,   /* 0~7 = Null, ", #, ##, Natch, ", bb, b */    artic;    /* 0~4 = tie, legato, normal, marcato, stuccato */}    NOTE;      /* 5 bytes *//* Times are scaled so Whole Note == 192 == LCM * 64; * may someday include more factors.  .Durtime removed 12/87  */typedef struct {     byte   part;        /* Voice no.: 0 (specials), 1~16 */     Etime  startime;    /* Start time of note w/in piece */     NOTE   show;        /* The note|rest! */} EVENT;                 /* 8 bytes *//* Structures for staves, parts, clefs. etc. */typedef struct {    short staffY;   /* height of bottom line */    tiny  clef_no;  /* which clef *//* Next field no longer used; get indirect via clefs[].bnote 88/1/2 */    tiny  botnote;  /* # of WHITE note on bottom line *//* For transposing-instrument clefs */    tiny  xsharps;  /* # of extra sharps beyond "concert" key */    tiny  xsemis;   /* # extra semitones to transpose up */} STAFF;typedef struct {    char  *clefname;/*  ubyte *climg;        /* clef draw image */    tiny  bnote;         /* # of WHITE note on bottom line */} CLEF;typedef struct {    tiny  pstaff;   /* which staff it's on */    tiny  philo;    /* stem info */} PART;/* New cluzion */typedef struct {    byte  width;    /* Total graphics width to allow on plot */    ubyte *czimg;   /* image array; may be unsigned INT! */    byte  czbytes,  /* # bytes width of image (1, 2, maybe 3) */          czhgt,    /* height (# lines) of image */          czyoff;   /* Height of TOP line above given staffY */} CLUZION;          /* "Inclusion" *//* Misc. abbreviations */#define SEVENT sizeof(EVENT)#define SNOTE  sizeof(NOTE)/* eof ~VM640/Wmuse.h */