/* ~Sw640/CURSORS.H  Codes etc. for multiple cursors *//* NOTICE -- update "images.h" defn of NICURSES to match ours! *//* CAUTION -- more than 7 levels of nesting blows C.Prep! */#define CNONE       0    /* Invisible stealth cursor */#define CARROW      1    /* The good old default */#define CBUTTON     2    /* Finger, or whatever pushes buttons */  /* Old part of toolbox */#define COTB        3    /* Cursor (1st) of Old (Upper row) ToolBox */#define CLEFTMARK   3    /* Three marker types */#define CRGHTMARK   4#define CTOMARK     5#define CXOUT       6    /* Deleter */#define CIMARK      7    /* For instrs, levels, etc. */#define CPLUS       8#define COTBEND     8    /* End old Tool row */  /* Artics */#define CTIE        9    /* 9 Tie-ing notes */#define CLEG   (CTIE+1)#define CNORM  (CTIE+2)#define CMARC  (CTIE+3)#define CSTAC  (CTIE+4)       /* 13 */  /* New toolbox items */#define CNTB        14    /* dummy for group */#define CBARLINE    (CNTB)#define CSMASH      (CNTB+1)#define CPARTCOPY   (CNTB+2)#define CJOIN       (CNTB+3)#define CSQUAWK     (CNTB+4)#define CUPDOWN     (CNTB+5)#define CSCREEN     (CNTB+6)#define CPARTFULL   (CNTB+7)  /* 21 not shown on toolbox */#define CNTBEND     CPARTFULL /* 22 */  /* End toolbox */#define CBRUSH      22        /* 22 meaning note or rest on brush */  /* Setup & Layout menus.  May be 16 pixels wide. */#define CSL         23        /* 23 group dummy */#define CPLUS8VA    (CSL)     /* 23 */#define CMINUS8VA   (CSL+1)#define CREFILL     (CSL+2)   /* Refill part */#define CTACET      (CSL+3)#define CCLEAR      (CSL+4)   /* 27 */#define CSLEND      CCLEAR    /* 27 */  /* End of official 9x9 icurses[] array, tho still in Setup/Layout menus */#define NICURSES    (CSLEND+1-4)  /* size of official array == last one + 1 *//* was 22, ot 24 now */     /* These re-use note images */#define CPIT       28         /* Pitched note, with flags */#define CPITNF     (CPIT+1)   /* w/out flags */#define CPERC      (CPIT+2)   /* Percussion note, with flags */#define CPERCNF    (CPIT+3)     /* Clefs must be assigned in same order as actual image array */#define CTREBLE    32         /* 32 Treble clef */#define CBASS      (CTREBLE+1)#define CGUITAR    (CTREBLE+2)#define CDBLBASS   (CTREBLE+3)#define CPERCLEF   (CTREBLE+4)#define CALTO      (CTREBLE+5)#define CTENOR     (CTREBLE+6)#define CLASTCLEF  CTENOR#define NCURSORS   (CLASTCLEF+1)    /* ot 39.  Always last one + 1 *//* NOTICE -- update "images.h" defn of NICURSES to match above *//* Extra cursors defns with no real cursors; used in Bill only *//* none */#ifdef FCURSE       /* Activate only inside fcurse.c file *//* unsigned icurses[NICURSES][CURSEHGT]; *//* Structure to define seize, hot-spot, and image of cursors:*  Cursor is "fine" pixel-wise if left+right < 9, else "coarse" columnwise.*  Left may be inflated (and right deflated) to position cursors*    farther left on notes, closer to note center.*/typedef struct {     byte          top,      /* No. pixels from top of img array to hot spot */          bot,      /* No. pix USED below hot spot */          left,     /* No. pix from left edge of array to hot spot */          right;    /* No. pix USED to right fo hot spot */     unsigned          *cimage;} Cursor;/* "4, 4, 4, 4," is default for yet-undefined cursors */static Cursor cursors[NCURSORS] = { {1,1, 1,1, icurses[0]},           /* 0 */ {0,4, 0,8, icurses[CARROW]},      /* 1 */ {3,3, 4,4, icurses[CBUTTON]}, {3,4, 3,3, icurses[CLEFTMARK]}, {3,4, 5,1, icurses[CRGHTMARK]}, {3,4, 4,3, icurses[CTOMARK]}, {3,3, 4,4, icurses[CXOUT]}, {0,7, 3,4, icurses[CIMARK]}, {4,2, 4,4, icurses[CPLUS]}, {3,1, 6,8, icurses[CTIE]},        /* 9 */ {1,1, 4,4, iartics[1]}, /* legato */ {1,1, 4,4, iartics[2]}, /* norm default */ {0,2, 4,4, iartics[3]}, /* marc was {1,1 */ {1,1, 4,4, iartics[4]}, /* stuc */ {4,4, 5,3, icurses[CBARLINE-4]},    /* 14, was 13 */ {8,0, 4,2, icurses[CSMASH-4]},      /* Chisel -- smash notes */ {4,2, 5,3, icurses[CPARTCOPY-4]},   /* Square -- Part Copy, needs pickup */ {3,4, 6,7, icurses[CJOIN-4]},       /* WedRings -- join up notes/rests */ {2,5, 5,3, icurses[CSQUAWK-4]},     /* Question mark -- Squawker */ {0,7, 4,2, icurses[CUPDOWN-4]},     /* move note up/down */ {4,4, 7,7, icurses[CSCREEN-4]},     /* New filter screen */ {4,2, 5,3, icurses[CPARTFULL-4]},   /* Square -- Part Copy, ready to blast */ {0,8, 0,8, icurses[CBRUSH-4]},      /* 22, was 20 */ {4,4, 7,8, icurses[CPLUS8VA-4]}, {4,4, 7,8, icurses[CMINUS8VA-4]}, {5,3, 6,6, icurses[CREFILL-4]}, {4,4, 7,8, icurses[CTACET-4]}, {5,3, 3,3, icurses[CCLEAR-4]},      /* 27, was 25 *//* These must be filled in by code, compiler too dumb */ {13,2, 4,11, NULL},    /* CPIT */ {13,2, 4,11, NULL}, {13,2, 4,11, NULL}, {13,2, 4,11, NULL},    /* CPERCNF */ {13,13, 7,8, iclefs[CTREBLE-CTREBLE]}, {13,13, 7,8, iclefs[CBASS-CTREBLE]}, {13,13, 7,8, iclefs[CGUITAR-CTREBLE]}, {13,13, 7,8, iclefs[CDBLBASS-CTREBLE]}, {13,13, 7,8, iclefs[CPERCLEF-CTREBLE]}, {13,13, 7,8, iclefs[CALTO-CTREBLE]}, {13,13, 7,8, iclefs[CTENOR-CTREBLE]},}; /* cursors[] *//* Fcn needed only for string-constant images -- compiler is* too stupid to initialize constants from .text space. */curinit() {     cursors[CPIT].cimage    = inotes[4];     cursors[CPITNF].cimage  = inotes[3];     cursors[CPERC].cimage   = inotes[2];     cursors[CPERCNF].cimage = inotes[1];}#endif/* eof CURSORS.H */