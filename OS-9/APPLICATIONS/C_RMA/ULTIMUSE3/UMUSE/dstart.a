* Fake dummy version of cstart, Wm640 version* NOTE: this version JUMPS TO, does not CALL, the "main()",*   so no dummy 1st argument is needed in main().** Many RMB and FCC items have been retained merely to balance*   the data sections.*nfiles equ 2        stdin and stdout at leastTyp equ 1Edit equ 1Stk equ nfiles*256+128+256    stdin,stdout,stderr and fudge psect dstart_a,$11,$81,Edit,Stk,_dstart** rob the first dp byte so nothing gets assigned* here.  No valid pointer can point to byte zero.* vsect dp__$$ fcb 0 endsectMAXARGS equ 30 vsectargv rmb 2*MAXARGS pointers to argsargc rmb 2 argument counter_sttop rmb 2 stack top endsect* the following are globally known vsectmemend: rmb 2_flacc: rmb 8 floating point & longs accumulator_mtop: rmb 2 current non-stack memory top_stbot: rmb 2 current stack bottom limiterrno: rmb 2 global error holder endsect_dstart:* lbsr main call the program* rts lbra main     just jump to it* Restore this code once you figure it out how it works_stkcheck: rts* fixserr fcc /**** STACK OVERFLOW ****/* fixserr fcc /SO/  Shorter version, saves 22. bytesfixserr fcb 13      Hell, save 24. endsect