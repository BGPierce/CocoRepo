PROCEDURE IconManREM ***********************************************************REM *                                                         *REM *  IconMan      V 01.00.00        Tandy Color Computer 3  *REM *                                                         *REM *  (c) 1991, Shawn Driscoll.                              *REM *                                                         *REM *  Modified from old code, (c) 1990, Earther Enterprises. *REM *                                                         *REM *  To be run with Multi-Vue under OS-9 Level II.          *REM *                                                         *REM *  (GuiB 1.1, Attr, and Pwd must be in CMDS dir.  Gfx2    *REM *  and Syscall must be merged into RunB.  StdPats_16      *REM *  must be merged into memory.)                           *REM *                                                         *REM ***********************************************************REM TYPE butt=name:STRING[7]; switch,hpos,vpos,length:INTEGERTYPE tit=nm:STRING[20]; sw,hp,vp,ln:INTEGERTYPE registers=cc,a,b,dp:BYTE; x,y,u:INTEGERDIM regs:registersDIM button(8):buttDIM title(2):titDIM chosen,done,loading:BOOLEANDIM grid(24,24),path,code,procid,icon(144),color,pixel,errnum:BYTEDIM minfile,maxfile:REALDIM key:STRING[1]DIM command:STRING[4]DIM status,prog_version:STRING[8]DIM iconname,line,icondir,newdir:STRING[60]DIM datum,char(29),lsn(3),count,total,oldcolor,filenum:BYTEDIM xp,yp,zzz,shade,rgb,xpos,ypos,xsize,ysize,i,j,k,x1,y1,xx,yy,
xz,yz,xi,yi,lx,ly:INTEGERDIM oldxmouse,oldymouse,button1,button2,z1,z2,xmouse,ymouse,x2,y2
:INTEGERDIM file(300):STRING[29]SHELL "load attr"SHELL "load pwd"prog_version="01.00.00"REM Test version 1.1.RUN guib("VERSION",status,1,1,z1,z2)IF status="BAD" THEN PRINT CHR$(12); PRINT "IconMan "; prog_version; " requires GuiB 1.1!"PRINT INPUT "Press [ENTER]",iconnameEND ENDIF REM Turn cursor off.RUN gfx2("font",200,1)RUN gfx2("curoff")REM GuiB must run in a non-scaled window.RUN gfx2("scalesw","off")RUN gfx2("propsw","on")REM Set up default palettes for color registers 04-15.RUN gfx2("palette",4,36)RUN gfx2("palette",5,32)RUN gfx2("palette",6,4)RUN gfx2("palette",7,18)RUN gfx2("palette",8,16)RUN gfx2("palette",9,1)RUN gfx2("palette",10,9)RUN gfx2("palette",11,8)RUN gfx2("palette",12,56)RUN gfx2("palette",13,7)RUN gfx2("palette",14,63)RUN gfx2("palette",15,0)RUN gfx2("color",15,13,15)RUN gfx2("clear")REM Where is the user's icon directory?ON ERROR GOTO 100icondir=""OPEN #path,"/dd/sys/earth.sys":READREPEAT READ #path,lineIF LEFT$(line,6)="ICONS=" THEN icondir=RIGHT$(line,LEN(line)-6)ENDIF REM Set up the palettes for color registers 12-15 from the EARTH.SYS file.IF LEFT$(line,3)="REG" THEN FOR i=12 TO 15command=STR$(i)+"="IF LEN(command)<3 THEN command="0"+commandENDIF IF MID$(line,4,3)=command THEN color=0FOR j=1 TO 3rgb=VAL(MID$(line,j+6,1))shade=LAND(rgb,2)*2^(5-j)shade=shade+LAND(rgb,1)*2^(3-j)color=color+shadeNEXT jRUN gfx2("palette",i,color)ENDIF NEXT iENDIF UNTIL EOF(#path)CLOSE #pathREM If icon dir from SYS file is not found then make current dataREM dir the icon dir.100 IF icondir="" THEN 120ON ERROR GOTO 110CHD icondirGOTO 120110 icondir=""120 ON ERROR REM Icon is located at: lx,lylx:=46ly:=22REM Get group number for graphic bufferscode:=$0CRUN syscall(code,regs)procid:=regs.aON ERROR GOTO 130RUN gfx2("killbuff",procid,0)130 ON ERROR REM Clear icon in buffer #1.GOSUB 340REM Load IconMan logo into buffer #2.RUN gfx2("gpload",procid,2,8,30,30,450)FOR i=1 TO 450READ datumPUT #1,datumNEXT iREM Load bomb into buffer #3.RUN gfx2("gpload",procid,3,8,30,30,450)FOR i=1 TO 450READ datumPUT #1,datumNEXT iREM Load pencil pointer into buffer #4.RUN gfx2("gpload",procid,4,6,12,11,33)FOR i=1 TO 33READ datumPUT #1,datumNEXT iREM Load arrow into buffer #5.RUN gfx2("gpload",procid,5,6,12,15,45)FOR i=1 TO 45READ datumPUT #1,datumNEXT iREM Load hourglass into buffer #6.RUN gfx2("gpload",procid,6,6,16,15,60)FOR i=1 TO 60READ datumPUT #1,datumNEXT iRUN gfx2("color",12)RUN guib("SQUARE","FILLED",lx-26,ly-16,76,60)RUN guib("WINDOW","RAISED",lx-26,ly-16,76,60)RUN guib("WINDOW","ETCHED",lx-21,ly-11,66,50)RUN gfx2("color",15,12)RUN gfx2("curxy",5,1)PRINT " Icon "; RUN gfx2("put",procid,1,lx,ly)REM Display icon creator gridtitle(1).nm="           Work Area"title(1).hp=20title(1).vp=2title(1).sw=0title(1).ln=18xx=title(1).hp*8-7yy=title(1).vp*8-7RUN gfx2("color",12)RUN guib("SQUARE","FILLED",xx,yy,158,176)RUN guib("TITLE",title(1).nm,title(1).hp,title(1).vp,title(1).sw
,title(1).ln)zzz=6RUN guib("WINDOW","RAISED",xx,yy,158,176)xx=xx+7yy=yy+25xz=xx+143yz=yy+143RUN guib("WINDOW","DROPPED",xx-2,yy-2,148,148)RUN gfx2("color",0)RUN guib("SQUARE","FILLED",xx,yy,144,144)REM Display color menuz1:=135z2:=84RUN gfx2("color",12)RUN guib("SQUARE","FILLED",z1-6,z2-6,21,54)RUN guib("WINDOW","RAISED",z1-6,z2-6,21,54)FOR i=0 TO 3RUN gfx2("color",i)RUN guib("SQUARE","FILLED",z1,z2+i*11,9,9)NEXT iREM Display command menutitle(2).nm="IconMan"title(2).hp=4title(2).vp=10title(2).sw=0title(2).ln=6button(1).name="Clear"button(2).name="Load "button(3).name="Save "button(4).name="Info..."button(5).name="Quit "button(6).name="Chd"button(7).name="Edit"button(8).name="Return"button(1).switch=0button(2).switch=0button(3).switch=0button(4).switch=0button(5).switch=0button(6).switch=0button(7).switch=0button(8).switch=0button(1).length=6button(2).length=6button(3).length=6button(4).length=6button(5).length=6button(6).length=5button(7).length=5button(8).length=5button(1).hpos=4 \button(1).vpos=12button(2).hpos=4 \button(2).vpos=14button(3).hpos=4 \button(3).vpos=16button(4).hpos=4 \button(4).vpos=18button(5).hpos=4 \button(5).vpos=20button(6).hpos=16 \button(6).vpos=8button(7).hpos=16 \button(7).vpos=10button(8).hpos=16 \button(8).vpos=12RUN gfx2("color",12)RUN guib("SQUARE","FILLED",26,74,60,100)RUN guib("WINDOW","RAISED",26,74,60,100)RUN guib("TITLE",title(2).nm,title(2).hp,title(2).vp,title(2).sw
,title(2).ln)FOR i=1 TO 5RUN guib("BUTTON",button(i).name,button(i).hpos,button(i).vpos,button
(i).switch,button(i).length)NEXT iREM rUN guib("MOUSE","INIZ",0,1,0,0)RUN gfx2("gcset",procid,4)GOSUB 440REM Begin main routinecolor:=1oldcolor=colorGOSUB 460done=FALSEREPEAT REM SS.MOUSE: What is mouse up to?RUN guib("MOUSE","CLICK",button1,button2,xmouse,ymouse)IF button1>0 THEN REM Mouse was clickedymouse=ymouse+10IF xmouse>=xx AND xmouse<=xz AND ymouse>=yy AND ymouse<=yz THEN REM Mouse is inside the grid.REM Plot a pixel of the icon.x1:=(xmouse-xx)/zzzy1:=(ymouse-yy)/zzzIF x1<>oldxmouse OR y1<>oldymouse THEN i:=xx+x1*zzzj:=yy+y1*zzzRUN gfx2("color",color)RUN gfx2("bar",i,j,i+5,j+5)RUN gfx2("point",lx+x1,ly+y1)grid(y1+1,x1+1):=coloroldxmouse=x1oldymouse=y1ENDIF ENDIF REM Maybe mouse is choosing a color?IF xmouse>=z1 AND xmouse<=z1+8 THEN FOR i=0 TO 3j=z2+i*11IF ymouse>=j AND ymouse<=j+8 THEN color=iGOSUB 460ENDIF NEXT iENDIF REM Or mouse could be clicking on a command?FOR k=1 TO 5x1=button(k).hpos*8-4y1=button(k).vpos*8-4x2=x1+button(k).length*8+7y2=y1+15IF xmouse>=x1 AND xmouse<=x2 AND ymouse>=y1 AND ymouse<=y2 THEN button(k).switch=1RUN guib("BUTTON",button(k).name,button(k).hpos,button(k).vpos,button
(k).switch,button(k).length)ON k GOTO 140,150,220,270,260REM Clear work area.140 GOSUB 340GOSUB 450GOSUB 470iconname=""GOSUB 410button(1).switch=0RUN guib("BUTTON",button(1).name,button(1).hpos,button(1).vpos,button
(1).switch,button(1).length)GOTO 290REM Load an icon from disk.150 GOSUB 350RUN guib("TITLE","",1,1,1,20)RUN guib("ARROW","UP",4,22,0,0)RUN guib("MAKEBAR","VERT",4,38,54,0)RUN guib("MOVEBAR","VERT",4,38,54,0)RUN guib("ARROW","DOWN",4,92,0,0)RUN guib("WINDOW","ETCHED",132,24,32,32)RUN guib("WINDOW","DROPPED",22,22,100,86)FOR i=6 TO 8button(i).switch=0RUN guib("BUTTON",button(i).name,button(i).hpos,button(i).vpos,button
(i).switch,button(i).length)NEXT iRUN gfx2("gcset",procid,6)GOSUB 440GOSUB 530GOSUB 490GOSUB 480RUN gfx2("gcset",procid,5)GOSUB 440chosen=FALSEloading=FALSEREPEAT RUN guib("MOUSE","CLICK",button1,button2,xmouse,ymouse)IF button1>0 THEN IF total>0 THEN IF xmouse>=8 AND xmouse<=15 AND ymouse>=42 AND ymouse<=87 THEN REM Scroll bar was clicked.minfile=(ymouse-41)*100/46minfile=INT(minfile*total/100)GOSUB 520GOTO 210ENDIF IF xmouse>=4 AND xmouse<=19 AND ymouse>=22 AND ymouse<=37 THEN REM UP arrow was clicked.minfile=minfile-10GOSUB 520GOTO 210ENDIF IF xmouse>=4 AND xmouse<=19 AND ymouse>=92 AND ymouse<=107 THEN REM DOWN arrow was clicked.minfile=minfile+10GOSUB 520GOTO 210ENDIF IF xmouse>=23 AND xmouse<=120 THEN count=0FOR i=minfile TO maxfilej=count*8+23IF ymouse>=j AND ymouse<=j+7 THEN REM User clicked on icon filename.IF loading THEN RUN gfx2("curxy",3,FIX(3+filenum-minfile))RUN gfx2("color",15,12)RUN gfx2("propsw","off")PRINT "            "; RUN gfx2("propsw","on")RUN gfx2("curxy",3,FIX(3+filenum-minfile))PRINT file(filenum); ENDIF RUN gfx2("curxy",3,3+count)RUN gfx2("color",15,14)filenum=minfile+countRUN gfx2("propsw","off")PRINT "            "; RUN gfx2("propsw","on")RUN gfx2("curxy",3,3+count)PRINT file(filenum); RUN gfx2("gcset",procid,6)ON ERROR GOTO 200OPEN #path,"icon."+file(filenum):READGET #path,iconCLOSE #pathREM Display icon to be edited.RUN gfx2("gpload",procid,1,6,24,24,144)PUT #1,iconRUN gfx2("put",procid,1,136,28)RUN gfx2("gcset",procid,5)loading=TRUEiconname=file(filenum)GOTO 210ENDIF count=count+1NEXT iENDIF ENDIF FOR j=6 TO 8x1=button(j).hpos*8-4y1=button(j).vpos*8-4x2=x1+button(j).length*8+7y2=y1+15IF xmouse>=x1 AND xmouse<=x2 AND ymouse>=y1 AND ymouse<=y2 THEN REM A button from the icon load window was clicked.button(j).switch=1RUN guib("BUTTON",button(j).name,button(j).hpos,button(j).vpos,button
(j).switch,button(j).length)ON j-5 GOTO 160,180,190REM Change icon dir.160 GOSUB 370RUN gfx2("propsw","off")PRINT "Old:"; GOSUB 380ON ERROR GOTO 170170 PRINT "New:"; RUN gfx2("curon")INPUT "",newdirIF newdir="" THEN ON ERROR GOSUB 320button(6).switch=0RUN guib("BUTTON",button(6).name,button(6).hpos,button(6).vpos,button
(6).switch,button(6).length)GOTO 210ENDIF CHD newdirON ERROR icondir=newdirGOSUB 330GOSUB 530GOSUB 490GOSUB 480button(6).switch=0RUN guib("BUTTON",button(6).name,button(6).hpos,button(6).vpos,button
(6).switch,button(6).length)GOTO 210REM Edit icon just loaded.180 IF NOT(loading) THEN RUN gfx2("bell")button(7).switch=0RUN guib("BUTTON",button(7).name,button(7).hpos,button(7).vpos,button
(7).switch,button(7).length)GOTO 210ENDIF chosen=TRUEGOTO 210REM Return to main window.190 loading=FALSEchosen=TRUEGOTO 210ENDIF NEXT jGOTO 210REM Disk error while loading.200 errnum=ERRline="Error #"+STR$(errnum)+"!"GOSUB 450RUN gfx2("owend")RUN gfx2("gcset",procid,4)GOSUB 440GOSUB 540button(2).switch=0RUN guib("BUTTON",button(2).name,button(2).hpos,button(2).vpos,button
(2).switch,button(2).length)GOTO 290ENDIF 210 UNTIL chosenGOSUB 450RUN gfx2("owend")IF NOT(loading) THEN button(2).switch=0RUN guib("BUTTON",button(2).name,button(2).hpos,button(2).vpos,button
(2).switch,button(2).length)RUN gfx2("gcset",procid,4)GOSUB 440GOTO 290ENDIF FOR j=1 TO 24FOR i=1 TO 6x1:=icon(j*6+i-6)grid(j,i*4-3):=LAND(x1,$C0)/64grid(j,i*4-2):=LAND(x1,$30)/16grid(j,i*4-1):=LAND(x1,$0C)/4grid(j,i*4):=LAND(x1,$03)NEXT iNEXT jGOSUB 410GOSUB 470button(2).switch=0RUN guib("BUTTON",button(2).name,button(2).hpos,button(2).vpos,button
(2).switch,button(2).length)GOTO 290REM Save icon to disk.220 GOSUB 360ON ERROR GOTO 230FOR i=1 TO 139 STEP 6FOR j=0 TO 20 STEP 4x1:=(i+5)/6icon(i+j/4):=grid(x1,j+1)*64+grid(x1,j+2)*16+grid(x1,j+3)*4+grid
(x1,j+4)NEXT jNEXT i230 PRINT "Save icon as:"RUN gfx2("propsw","off")RUN gfx2("curon")INPUT "",iconnameON ERROR IF iconname="" THEN GOSUB 310button(3).switch=0RUN guib("BUTTON",button(3).name,button(3).hpos,button(3).vpos,button
(3).switch,button(3).length)GOTO 290ENDIF 240 ON ERROR GOTO 250CREATE #path,iconname:WRITEPUT #path,iconCLOSE #pathPRINT PRINT "Setting ATTR..."SHELL "attr "+iconname+" e"GOSUB 310ON ERROR button(3).switch=0RUN guib("BUTTON",button(3).name,button(3).hpos,button(3).vpos,button
(3).switch,button(3).length)GOTO 290250 errnum:=ERRIF errnum=218 THEN PRINT "Rewrite? "; GET #1,keyIF key="Y" OR key="y" THEN ON ERROR GOTO 250DELETE iconnameGOTO 240ENDIF GOSUB 310button(3).switch=0RUN guib("BUTTON",button(3).name,button(3).hpos,button(3).vpos,button
(3).switch,button(3).length)GOTO 290ENDIF line="Error #"+STR$(errnum)+"!"GOSUB 310GOSUB 540button(3).switch=0RUN guib("BUTTON",button(3).name,button(3).hpos,button(3).vpos,button
(3).switch,button(3).length)GOTO 290REM Quit program.260 done=TRUEGOTO 290REM Display program info270 xpos=6ypos=5xsize=28ysize=14GOSUB 420RUN gfx2("gcset",procid,5)GOSUB 440RUN gfx2("put",procid,2,12,12)RUN gfx2("color",15)RUN gfx2("propsw","off")RUN gfx2("boldsw","on")RUN gfx2("curxy",8,3)PRINT "IconMan "; prog_version; RUN gfx2("propsw","on")RUN gfx2("boldsw","off")RUN gfx2("color",13)RUN gfx2("curxy",2,7)PRINT "Copyright (c) 1991, Shawn Driscoll."; RUN guib("BUTTON","Return",19,10,0,5)chosen=FALSEREPEAT RUN guib("MOUSE","CLICK",button1,button2,xmouse,ymouse)IF button1>0 THEN IF xmouse>=19*8-4 AND xmouse<=19*8-4+5*8+7 AND ymouse>=10*8-4 AND
ymouse<=10*8-4+15 THEN RUN guib("BUTTON","Return",19,10,1,5)chosen=TRUEENDIF ENDIF UNTIL chosenGOSUB 450GOSUB 310button(4).switch=0RUN guib("BUTTON",button(4).name,button(4).hpos,button(4).vpos,button
(4).switch,button(4).length)GOTO 290ENDIF NEXT kELSE IF button2>0 THEN REM Button 2 was pressed.REM Increment color value.color=color+1IF color>3 THEN color=0ENDIF GOSUB 460ENDIF ENDIF 290 UNTIL doneGOSUB 450RUN gfx2("curon")RUN gfx2("color",14,15,15)RUN gfx2("clear")RUN gfx2("propsw","off")RUN gfx2("killbuff",procid,0)ON ERROR GOTO 300SHELL "unlink pwd"SHELL "unlink attr"REM We're done.300 END 310 RUN gfx2("owend")RUN gfx2("owend")RUN gfx2("gcset",procid,4)GOSUB 440RETURN 320 RUN gfx2("owend")RUN gfx2("owend")RUN gfx2("gcset",procid,5)GOSUB 440RETURN 330 RUN gfx2("owend")RUN gfx2("owend")RUN gfx2("gcset",procid,6)GOSUB 440RETURN REM Clear icon matrix (24x24 pixels)340 FOR i=1 TO 24FOR j=1 TO 24grid(i,j)=0NEXT jNEXT iFOR i=1 TO 144icon(i)=0NEXT iRUN gfx2("gpload",procid,1,6,24,24,144)PUT #1,iconRETURN 350 xp=9yp=8xsize=22ysize=14GOSUB 430RETURN 360 xpos=8ypos=16xsize=23ysize=5GOSUB 420RETURN 370 xpos=6ypos=9xsize=30ysize=5GOSUB 420RETURN REM Display icon dir.380 ON ERROR GOTO 390IF icondir="" THEN SHELL "pwd"ELSE PRINT icondirENDIF ON ERROR RETURN 390 PRINT ON ERROR RETURN 400 xpos=11ypos=9xsize=20ysize=5GOSUB 420RETURN REM Display icon name.410 RUN gfx2("curxy",4,6)RUN gfx2("color",14,12)PRINT "              "; RUN gfx2("curxy",4,6)PRINT iconname; oldxmouse=255oldymouse=255RETURN REM Create an overlay window for I/O.420 GOSUB 450RUN gfx2("owset",1,xpos,ypos,xsize,ysize,15,12)RUN guib("WINDOW","SHADOWED",0,0,xsize*8,ysize*8)RUN guib("WINDOW","FRAMED",2,2,xsize*8-4,ysize*8-4)RUN gfx2("owset",0,xpos+1,ypos+1,xsize-2,ysize-2,15,12)RETURN REM Display the load icon window.430 GOSUB 450RUN gfx2("owset",1,xp,yp,xsize,ysize,15,12)RUN guib("WINDOW","SHADOWED",0,0,xsize*8,ysize*8)RETURN REM SS.Mouse: Sample rate=3, timeout=10, follow=1440 RUN guib("MOUSE","ON",0,0,0,0)RETURN REM Turn off mouse pointer450 RUN guib("MOUSE","OFF",0,0,0,0)RUN gfx2("gcset",0,0)RETURN REM Highlight color selected.460 RUN gfx2("color",12)RUN guib("SQUARE","OUTLINED",z1-1,z2-1+oldcolor*11,11,11)RUN guib("SQUARE","POPPED",z1-1,z2-1+color*11,11,11)oldcolor=coloroldxmouse=255oldymouse=255FOR i=1 TO 1000 \NEXT iRETURN REM Copy the loaded icon to the work area.470 RUN gfx2("put",procid,1,lx,ly)FOR i=0 TO 23yi=yy+i*zzzFOR j=0 TO 23pixel=grid(i+1,j+1)RUN gfx2("color",pixel)xi=xx+j*zzzRUN gfx2("bar",xi,yi,xi+5,yi+5)NEXT jNEXT iRUN gfx2("gcset",procid,4)GOSUB 440RETURN REM Change data dir.REM List icons dir on screen.480 GOSUB 450RUN gfx2("owset",0,xp+3,yp+3,12,10,15,12)RUN gfx2("clear")RUN gfx2("owend")RUN gfx2("color",15,12)IF total>0 THEN count=0FOR i=minfile TO maxfileRUN gfx2("curxy",3,3+count)count=count+1PRINT file(i); NEXT iRUN guib("MOVEBAR","VERT",4,38,54,FIX((minfile-1)*100/total))ELSE RUN guib("MOVEBAR","VERT",4,38,54,0)ENDIF loading=FALSERUN gfx2("color",12)RUN guib("SQUARE","FILLED",136,28,24,24)RUN gfx2("gcset",procid,5)GOSUB 440RETURN REM Read icons into list.490 total=0ON ERROR GOTO 500OPEN #path,".":READ+DIRREPEAT GET #path,charGET #path,lsnIF total<300 AND char(1)>0 AND char(1)<>46 AND char(1)<>174 THEN
total=total+1file(total)=""count=1REPEAT file(total)=file(total)+CHR$(char(count))count=count+1UNTIL char(count)>127file(total)=file(total)+CHR$(char(count)-128)IF LEFT$(file(total),5)="icon." OR LEFT$(file(total),5)="ICON." THEN
file(total)=RIGHT$(file(total),LEN(file(total))-5)ELSE total=total-1ENDIF ENDIF UNTIL EOF(#path)CLOSE #path500 minfile=1GOSUB 510RETURN 510 maxfile=minfile+9IF total<maxfile THEN maxfile=totalENDIF RETURN REM Update scroll bar.520 IF minfile<1 THEN minfile=1ENDIF IF minfile>total THEN minfile=totalENDIF GOSUB 510GOSUB 480RETURN REM Display icon directory name.530 RUN gfx2("owset",0,xp+1,yp+1,20,1,14,13)RUN gfx2("clear")RUN gfx2("owend")RUN gfx2("color",14,13)RUN gfx2("curxy",1,1)PRINT "Dir: "; GOSUB 380RETURN REM Print error message.540 chosen=FALSExpos=5ypos=8xsize=30ysize=10GOSUB 420RUN gfx2("gcset",procid,5)GOSUB 440RUN gfx2("put",procid,3,10,10)RUN gfx2("propsw","off")RUN gfx2("boldsw","on")RUN gfx2("curxy",6,3)RUN gfx2("color",15)PRINT line; RUN gfx2("propsw","on")RUN gfx2("boldsw","off")RUN guib("BUTTON","So?",22,6,0,3)REPEAT RUN guib("MOUSE","CLICK",button1,button2,xmouse,ymouse)IF button1>0 THEN IF xmouse>=22*8-4 AND xmouse<=22*8-4+3*8+7 AND ymouse>=6*8-4 AND
ymouse<=6*8-4+15 THEN RUN guib("BUTTON","So?",22,6,1,3)chosen=TRUEENDIF ENDIF UNTIL chosenGOSUB 450GOSUB 310chosen=FALSERETURN REM Data for program logo.DATA 238,238,238,238,238,238,238,238,238,238,238,238,238,238,238DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 236,204,204,170,204,204,204,204,204,204,204,205,220,204,207DATA 236,204,204,170,204,204,204,204,204,204,204,221,221,204,207DATA 236,204,204,204,204,204,119,204,204,204,205,238,221,220,207DATA 236,204,204,204,204,204,119,204,204,204,222,238,205,252,207DATA 236,204,238,238,238,236,204,204,204,205,238,236,223,204,207DATA 236,204,228,78,170,236,204,204,204,222,238,205,252,204,207DATA 236,204,228,78,170,236,204,204,205,238,236,223,204,204,207DATA 236,204,238,238,238,236,204,204,222,238,205,252,204,204,207DATA 236,204,231,126,204,204,204,205,238,236,223,204,204,204,207DATA 236,204,231,126,204,204,204,222,238,205,252,204,207,252,207DATA 236,204,238,238,204,204,204,222,236,223,204,207,255,252,207DATA 236,204,228,78,204,204,205,238,205,252,207,255,255,252,207DATA 236,204,228,78,204,204,205,236,223,207,255,255,252,204,207DATA 236,204,238,238,238,236,222,221,255,255,255,204,204,204,207DATA 236,204,234,174,68,236,221,255,255,252,204,204,204,204,207DATA 236,204,234,174,68,236,204,204,204,204,204,204,204,204,207DATA 236,204,238,238,238,238,238,204,238,238,204,204,68,204,207DATA 236,204,228,78,119,234,174,204,231,126,204,204,68,204,207DATA 236,204,228,78,119,234,174,204,231,126,204,204,204,204,207DATA 236,204,238,238,238,238,238,238,238,238,238,236,204,204,207DATA 236,204,231,126,170,228,78,119,228,78,170,236,204,204,207DATA 236,204,231,126,170,228,78,119,228,78,170,236,204,204,207DATA 236,204,238,238,238,238,238,238,238,238,238,236,204,204,207DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 239,255,255,255,255,255,255,255,255,255,255,255,255,255,255REM Data for program bomb.DATA 238,238,238,238,238,238,238,238,238,238,238,238,238,238,238DATA 236,204,204,204,204,204,204,204,204,204,204,204,204,204,207DATA 206,204,204,204,204,204,204,204,204,204,204,204,204,204,252DATA 206,204,204,204,204,204,206,238,236,204,204,204,204,204,252DATA 204,236,204,204,204,204,206,221,252,204,204,204,204,207,204DATA 204,236,204,204,204,204,206,221,252,204,204,204,204,207,204DATA 204,206,204,204,204,204,206,221,252,204,204,204,204,252,204DATA 204,206,204,204,204,204,206,221,252,204,204,204,204,252,204DATA 204,204,236,204,204,204,206,221,252,204,204,204,207,204,204DATA 204,204,236,204,204,204,206,221,252,204,204,204,207,204,204DATA 204,204,206,204,204,204,206,221,252,204,204,204,252,204,204DATA 204,204,206,204,204,204,206,221,252,204,204,204,252,204,204DATA 204,204,204,236,204,204,206,221,252,204,204,207,204,204,204DATA 204,204,204,236,204,204,206,221,252,204,204,207,204,204,204DATA 204,204,204,206,204,204,206,221,252,204,204,252,204,204,204DATA 204,204,204,206,204,204,206,255,252,204,204,252,204,204,204DATA 204,204,204,204,236,204,204,204,204,204,207,204,204,204,204DATA 204,204,204,204,236,204,206,238,236,204,207,204,204,204,204DATA 204,204,204,204,206,204,206,221,252,204,252,204,204,204,204DATA 204,204,204,204,206,204,206,221,252,204,252,204,204,204,204DATA 204,204,204,204,204,236,206,255,252,207,204,204,204,204,204DATA 204,204,204,204,204,236,204,204,204,207,204,204,204,204,204DATA 204,204,204,204,204,206,204,204,204,252,204,204,204,204,204DATA 204,204,204,204,204,206,204,204,204,252,204,204,204,204,204DATA 204,204,204,204,204,204,236,204,207,204,204,204,204,204,204DATA 204,204,204,204,204,204,236,204,207,204,204,204,204,204,204DATA 204,204,204,204,204,204,206,204,252,204,204,204,204,204,204DATA 204,204,204,204,204,204,206,204,252,204,204,204,204,204,204DATA 204,204,204,204,204,204,204,239,204,204,204,204,204,204,204DATA 204,204,204,204,204,204,204,239,204,204,204,204,204,204,204REM Data for pencil pointer.DATA 0,0,64DATA 0,1,208DATA 0,7,244DATA 0,31,208DATA 0,127,64DATA 1,253,0DATA 7,244,0DATA 31,208,0DATA 119,64,0DATA 125,0,0DATA 84,0,0REM Data for arrow pointer.DATA 128,0,0DATA 160,0,0DATA 184,0,0DATA 190,0,0DATA 191,128,0DATA 191,224,0DATA 191,248,0DATA 191,254,0DATA 191,234,128DATA 186,224,0DATA 162,248,0DATA 128,184,0DATA 0,190,0DATA 0,46,0DATA 0,42,0REM Data for hourglass pointer.DATA 0,0,252,0DATA 0,63,171,240DATA 0,234,171,172DATA 3,175,250,171DATA 3,170,234,171DATA 3,235,171,251DATA 3,175,250,235DATA 3,170,171,251DATA 0,235,170,172DATA 0,255,171,240DATA 3,172,252,0DATA 3,172,0,0DATA 48,240,0,0DATA 236,0,0,0DATA 48,0,0,0END 