                       Designed by Shawn Driscoll, (C) 1992.        Additional Code by Brother Jeremy, CSJW (C) 1993.        (All rights assigned to Shawn Driscoll)                                                              AN OVERVIEW                          What is GuiB?                          Multi-Vue  by  itself  is  a  GUI.  It can run on its own with no help      from other programs.  GuiB is a different animal in that it is  not  a      program  that runs on its own.  It is a subprogram that gets called on      by Basic09 programs.  GuiB is a set of programming tools  that  allows      a  programmer  to incorporate buttons, arrows, scroll bars, etc., into      his applications without much hassle.    GuiB  allows  programmers  to      design GUI's.                           GuiB  gives  the  CoCo 3 a modern looking GUI for future OS-9 Level II      applications.  If you've seen X-Windows for  UNIX,  then  you  already      have an idea of how GuiB will make your programs look.                           Programs  that  make  calls  to  GuiB  3.0  must first be started from      Multi-Vue's GShell screen by double-clicking on their icons.  This  is      so    that  Multi-Vue  can  pass  on  palette  and  mouse  environment      information to the program that is calling GuiB.    GuiB  itself  does      not  perform any mouse initializing or palette changing.  The changing      of  palettes  is  left  to  the  application  program  to  perform  if      necessary.                      GuiB  is designed to run in type 6, 7, and 8 windows.  The module will      use palettes 0-3 when run in a type 6 or 7 window for its  3-D  window      shading  while  using  palettes 12-15 in a type 8 window.  The windows      should have their scaling turned off  so  that  GuiB  can  return  the      correct  mouse  position  on  the  screen.  Programmers can have their      applications assign the palette registers from data  stored  in  their      code  or  from  register  color data stored in the EARTH.SYS file.  By      storing the color settings in the EARTH.SYS file, users will  be  able      to change the palettes to their liking.                                            pg 1                                         THE COMMAND SET                     GuiB  has  a  few  commands  that  can be called on by applications to      achieve a workable graphical interface.  GuiB requires six  PARAMs  in      order  to  perform  something  requested by an application.  The first      two PARAMs are strings (60 characters in length)  and  the  last  four      PARAMs  are  integers.  Here is a list of the GuiB commands along with      their features:                                                          MAKEBAR           WINDOW             TITLE                      =======           ======             =====                      HORIZ             FRAMED             Title Name                      VERT              RAISED                                        DROPPED                                        SHADOWED                                        ETCHED                                        CARVED                                        PICFRAME                                        MOVEBAR           MOUSE              VERSION                      =======           =====              =======                      HORIZ             CLICK              Status                      VERT              ON                                        OFF                                        ARROW             BUTTON             SQUARE                      =====             ======             ======                      UP                Button Name        FILLED                      DOWN                                 OUTLINED                      LEFT                                 PUSHED                      RIGHT                                POPPED                                                     GADGET             ELINE                                        ======             ======                                        DIAMOND            HORIZ                                        BULLETS            VERT                                        CLICKBOXES                                           pg 2                                         WINDOW is used to modify the look of a window on a screen.                           MOUSE is used to turn the mouse on or off and to find the location of       the mouse when it is clicked.                           BUTTON is used to display menu buttons that can be clicked on or  off.                  They are similar to the buttons on a SONY stereo.                           VERSION  is  used  to  verify  that the current version of GuiB is the      right one for a particular application.                           MAKEBAR creates a scroll bar for an application.                           MOVEBAR updates a scroll bar.                           TITLE allows programmers to give their applications a title name.                           SQUARE allows programs to draw outlined or filled boxes on the screen       using the same coordinates as the WINDOW commands.                           ARROW displays an arrow for use with scroll bars.                           GADGET displays a gadget that can be toggled on or off.                           ELINE displays an etched line for use in dividing the screen.                                                              pg 3                                         WINDOWS                           RUN GuiB("WINDOW","FRAMED",Xpos,Ypos,Xsize,Ysize)                          Draws a box on the screen with a frame around it.       (shaded for 3-D effect).                                               RUN GuiB("WINDOW","PICFRAME",Xpos,Ypos,Xsize,Ysize)                    A variation of the FRAMED window.  (Good for Info Screens).                                    RUN GuiB("WINDOW","RAISED",Xpos,Ypos,Xsize,Ysize)                          Draws a raised outline around a given area.                                               RUN GuiB("WINDOW","DROPPED",Xpos,Ypos,Xsize,Ysize)                          Draws a sunken outline around a given area.                                               RUN GuiB("WINDOW","SHADOWED",Xpos,Ypos,Xsize,Ysize)                          Draws a higher outline around a given area.                                               RUN GuiB("WINDOW","ETCHED",Xpos,Ypos,Xsize,Ysize)                          Draws a box that appears to look etched in.                                               RUN GuiB("WINDOW","CARVED",Xpos,Ypos,Xsize,Ysize)                          Draws a box that appears to look carved in.                                                              pg 4                                         SQUARES                      RUN GuiB("SQUARE","FILLED",Xpos,Ypos,Xsize,Ysize)                     Draws a filled-in sqaure using the current forground color.                                     RUN GuiB("SQUARE","OUTLINED",Xpos,Ypos,Xsize,Ysize)                     Draws an outline of a square using the current forground color.                                     RUN GuiB("SQUARE","PUSHED",Xpos,Ypos,Xsize,Ysize)                     Draws a square that is pushed in a bit.                                     RUN GuiB("SQUARE","POPPED",Xpos,Ypos,Xsize,Ysize)                     Draws a square that is popped out a bit.                                                 pg 5                                         MOUSE                      RUN GuiB("MOUSE","CLICK",Button1,Button2,Xmouse,Ymouse)                     Button1 or Button2 is > 0 if button is pressed.         Xmouse = horizontal pixel of mouse.         Ymouse = vertical pixel of mouse.                                               RUN GuiB("MOUSE","ON")                  Turns mouse on.                                     RUN GuiB("MOUSE","OFF")                     Turns mouse off.                --------------------------------------------------------------------        BUTTON                      RUN GuiB("BUTTON",Name$,Xpos,Ypos,Switch,Length)                     Displays a button at "curxy" Xpos,Ypos.         Name$ = The name on the button.         Switch = 1 (on) or 0 (off).         Length = width of button (number of columns wide).                           ---------------------------------------------------------------------             TITLE                      RUN GuiB("TITLE",Name$,Xpos,Ypos,Switch,Length)                     Similar to BUTTON except that the background for the center of the        title box is different than what BUTTON uses and the title name is        always highlighted.                                ---------------------------------------------------------------------                  ARROW                           RUN GuiB("ARROW","UP",Xpos,Ypos)                          Draws and UP arrow at location: Xpos, Ypos.  Other arrow types are        DOWN, LEFT, and RIGHT.                           ----------------------------------------------------------------------                   MAKEBAR / MOVEBAR                      RUN GuiB("MAKEBAR","HORIZ",Xpos,Ypos,Length)                          Displays a horizontal framed box at location: Xpos,Ypos (so many       pixels in Length).  The Length should be no less than 32.                                          pg 6                                           RUN GuiB("MOVEBAR","HORIZ",Xpos,Ypos,Length,percentage)                     Displays a scroll bar inside of a horizontal framed box that is       located at: Xpos,Ypos (and is so many pixels in length, but no       less than 32).  Percentage = 0-100                          NOTE: Both MOVEBAR and MAKEBAR can be used to create vertical scroll       bars by using "VERT" instead of "HORIZ".  The width of the framed       boxes used by the scroll bars is the same as the width of buttons,       titles, and arrows (16 pixels).                           --------------------------------------------------------------------        VERSION                           RUN GuiB("VERSION",Status$,A,B,C,D)                     If an application needed GuiB version 3.1 in order to work, then:        A = 3        B = 1        C = value returned by GuiB (hopefully the same value as A).         D = value returned by GuiB (hopefully the same value as B).         Status$ = value returned by GuiB (either "GOOD" or "BAD").         NOTE:  C  and  D  will return the actual version number of the current      GuiB.                           ----------------------------------------------------------------------                   GADGET                      RUN GuiB("GADGET","DIAMOND",Xpos,Ypos,Switch)                     Displays a diamond gadget at Xpos,Ypos.         Switch=1: Toggled on.         Switch=0: Toggled off.                                          RUN GuiB("GADGET","BULLET",Xpos,Ypos,Switch)                          Displays a bullet gadget at Xpos,Ypos.         Switch=1: Toggled on.         Switch=0: Toggled off.                                               RUN GuiB("GADGET","CLICKBOX",Xpos,Ypos,Switch)                          Displays a clickbox gadget at Xpos,Ypos.         Switch=1: Toggled on.         Switch=0: Toggled off.                    PROCEDURE testREM *REM *  Run this program in a type 8 40x24 window.REM *TYPE registers=cc,a,b,dp:BYTE; x,y,u:INTEGERDIM regs:registersDIM done:BOOLEANDIM color,code,datum,path,procid:BYTEDIM key:STRING[1]DIM command:STRING[3]DIM status,line:STRING[60]DIM percent1,percent2,shade,rgb:INTEGERDIM toggled,i,j:INTEGERDIM pushed,button1,button2,z1,z2,xmouse,ymouse:INTEGERpercent1=0percent2=0REM Test version 3.0.RUN guib("VERSION",status,3,0,z1,z2)IF status="BAD" THEN PRINT CHR$(12); PRINT "DEM------------------------------------------------------------------                                                    GUIB'S ENVIRONMENT                          /DD/SYS/StdPats_4 and /DD/SYS/StdPats_16 should be merged into  memory      along with any fonts and pointers during startup.  GuiB's arrows and        scrollbars make use of the pattern data.                                            pg 8                                    