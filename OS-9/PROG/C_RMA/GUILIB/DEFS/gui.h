/* This is a header file that will define some GUI structures data and GUI macros.  For use with James Delaney's GUI.L The term reference (cpr) indicates "Character Position Relative". The term reference (cr) indicates a size value "Character Relative". */#define   _INIZ_    -1#define   _ON_       1#define   _OFF_      0#define   W_FRAMED   0#define   W_RAISED   1#define   W_DROPPED  2#define   W_SHADOWED 3#define   W_ETCHED   4#define   EW_FRAMED  10#define   EW_RAISED  11#define   EW_DROPPED 12#define   EW_SHADOWED 13#define   S_FILLED   0#define   S_RAISED   1#define   S_PUSHED   2#define   S_POPPED   3#define   A_UP       0#define   A_DOWN     1#define   A_RIGHT    2#define   A_LEFT     3#define   B_HORIZ    0#define   B_VERT     1#define   BT_BIG     1#define   BT_REG     0#define   CkButn(a)      (a)->bt_act#define   Toggle(a)      (CkButn(a))?0:1extern int _SCALE;extern int _TYPE;typedef struct {     char ar_dir; /* Arrow's pointing direction */     int  ar_x,   /* Arrow's X (cpr) coordinate */          ar_y;   /* Arrow's Y (cpr) coordinate */     } ARROW;typedef struct {     char bt_name[32]; /* Name of button     */     int  bt_x,        /* X (cpr) coordinate */          bt_y,        /* Y (cpr) coordinate */          bt_len,      /* Length (cr)        */          bt_siz,      /* Size 0=reg 1=large */          bt_act;      /* Action where:      */                       /*   0=Raise, 1=Push, */                       /*  -1=Initialize     */     } BUTTON;typedef struct {     char tl_name[32]; /* Name of Title      */     int  tl_x,        /* X (cpr) coordinate */          tl_y,        /* Y (cpr) coordinate */          tl_len;      /* Length (cr)        */     char tl_act;      /* Action where:      */                       /*   0=Raised/Light   */                       /*   1=Pushed/Dark    */     } TITLE;typedef struct {     char br_dir;  /* 0=Horizontal, 1=Vertical */     int  br_x,    /* X (cpr) coordiante       */          br_y,    /* Y (cpr) coordinate       */          br_len;  /* Length (cr)              */     char br_act;  /* Action where:            */                   /*   -1=Initialize (0 per)  */                   /* 0-99=Percent Relative    */     } BAR;     